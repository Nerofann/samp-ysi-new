// generated by "sampctl package init"
#define FILTERSCRIPT
#include <a_samp>
#include <setup_database>
#include <setup>
#include <zcmd>
#include <sscanf2>
#include <strlib>

//vehicle
#define MAX_SERVER_VEHICLES     2000
#define MAX_PLAYER_VEHICLE      4
enum
{
    MODE_NOLOCK,
    MODE_LOCK,
};

enum DialogVehicle {
    DIALOG_LIST_VEH,
    DIALOG_DETAIL_VEHICLE
};

new Dialog[Dialog_data][DialogVehicle];

new VehicleNames[212][] =
{
    "Landstalker", "Bravura", "Buffalo", "Linerunner", "Pereniel", "Sentinel", "Dumper", "Firetruck", "Trashmaster", "Stretch", "Manana", "Infernus","Voodoo", "Pony",
    "Mule", "Cheetah", "Ambulance", "Leviathan", "Moonbeam", "Esperanto", "Taxi", "Washington", "Bobcat", "Mr Whoopee", "BF Injection", "Hunter", "Premier", "Enforcer",
    "Securicar", "Banshee", "Predator", "Bus", "Rhino", "Barracks", "Hotknife", "Trailer", "Previon", "Coach", "Cabbie", "Stallion", "Rumpo", "RC Bandit", "Romero",
    "Packer", "Monster", "Admiral", "Squalo", "Seasparrow", "Pizzaboy", "Tram", "Trailer 2", "Turismo", "Speeder", "Reefer", "Tropic", "Flatbed", "Yankee", "Caddy",
    "Solair", "Berkley's RC Van", "Skimmer", "PCJ-600", "Faggio", "Freeway", "RC Baron", "RC Raider", "Glendale", "Oceanic", "Sanchez", "Sparrow", "Patriot", "Quad",
    "Coastguard", "Dinghy", "Hermes", "Sabre", "Rustler", "ZR3 50", "Walton", "Regina", "Comet", "BMX", "Burrito", "Camper", "Marquis", "Baggage", "Dozer", "Maverick",
    "News Chopper", "Rancher", "FBI Rancher", "Virgo", "Greenwood", "Jetmax", "Hotring", "Sandking", "Blista Compact", "Police Maverick", "Boxville", "Benson", "Mesa",
    "RC Goblin", "Hotring Racer A", "Hotring Racer B", "Bloodring Banger", "Rancher", "Super GT", "Elegant", "Journey", "Bike", "Mountain Bike", "Beagle", "Cropdust",
    "Stunt", "Tanker", "RoadTrain", "Nebula", "Majestic", "Buccaneer", "Shamal", "Hydra", "FCR-900", "NRG-500", "HPV1000", "Cement Truck", "Tow Truck", "Fortune",
    "Cadrona", "FBI Truck", "Willard", "Forklift", "Tractor", "Combine", "Feltzer", "Remington", "Slamvan", "Blade", "Freight", "Streak", "Vortex", "Vincent", "Bullet",
    "Clover", "Sadler", "Firetruck", "Hustler", "Intruder", "Primo", "Cargobob", "Tampa", "Sunrise", "Merit", "Utility", "Nevada", "Yosemite", "Windsor", "Monster A",
    "Monster B", "Uranus", "Jester", "Sultan", "Stratum", "Elegy", "Raindance", "RC Tiger", "Flash", "Tahoma", "Savanna", "Bandito", "Freight", "Trailer", "Kart", "Mower",
    "Duneride", "Sweeper", "Broadway", "Tornado", "AT-400", "DFT-30", "Huntley", "Stafford", "BF-400", "Newsvan", "Tug", "Trailer A", "Emperor", "Wayfarer", "Euros",
    "Hotdog", "Club", "Trailer B", "Trailer C", "Andromada", "Dodo", "RC Cam", "Launch", "Police Car (LSPD)", "Police Car (SFPD)", "Police Car (LVPD)", "Police Ranger",
    "Picador", "S.W.A.T. Van", "Alpha", "Phoenix", "Glendale", "Sadler", "Luggage Trailer A", "Luggage Trailer B", "Stair Trailer", "Boxville", "Farm Plow", "Utility Trailer"
};

enum VehiclesData
{
    vehID,
    vehSessionID,
    vehModel,
    vehName[25],
    vehPlate[10],
    vehOwner[MAX_PLAYER_NAME],
    vehPrice,
    vehLock,
    vehMod[14],
    vehColorOne,
    vehColorTwo,
    Text3D:vehLabel,
    Float:vehX,
    Float:vehY,
    Float:vehZ,
    Float:vehA,
    bool:vehStatus,
    bool:is_destroyed
};
new vInfo[MAX_PLAYERS][MAX_PLAYER_VEHICLE][VehiclesData];


public OnFilterScriptInit()
{
	printf(">> buy-vehicles success loaded.");
    connect_db();
    return 1;
}

static stock GetName(playerid)
{
    new name[MAX_PLAYER_NAME];
    GetPlayerName(playerid, name, sizeof name);
    return name;
}

stock getVehicleName(modelid)
{
    new string[20];
    format(string, sizeof string, "%s", VehicleNames[modelid - 400]);
    return string;
}

CMD:mv(playerid, params[])
{
    new pid[MAX_PLAYERS];
    if(sscanf(params, "i", pid)) pid[playerid] = playerid;
    new query[255];
    mysql_format(SQL, query, sizeof query, "SELECT * FROM `vehicles` WHERE `veh_owner` = '%s' AND is_destroyed = 0 LIMIT %d", GetName(playerid), MAX_PLAYER_VEHICLE);
    mysql_tquery(SQL, query, "LoadVehicleData", "i", playerid);
    return 1;
}

forward LoadVehicleData(playerid);
public LoadVehicleData(playerid)
{
    new rows;
    new info[255] = "Vehicle Name\tJarak\tStatus\n";
    new status[25] = "{"COLOR_GREENS"}spawned"; 
    cache_get_row_count(rows);
    if(rows != 0){
        // new name[50], plate[10], label[50], owner[30];
        // new Float:price, Float:v_x, Float:v_y, Float:v_z, Float:v_a;
        // new bool:lock, bool:destroy;
        // new model, color1, color2;

        for(new i=0; i < rows; i++){
            cache_get_value_name(i, "veh_name", vInfo[playerid][i][vehName], 50);
            cache_get_value_name(i, "veh_plate", vInfo[playerid][i][vehPlate], 10);
            cache_get_value_name(i, "veh_owner", vInfo[playerid][i][vehOwner], MAX_PLAYER_NAME);

            cache_get_value_name_float(i, "veh_price", Float:vInfo[playerid][i][vehPrice]);
            cache_get_value_name_float(i, "vehX", Float:vInfo[playerid][i][vehX]);
            cache_get_value_name_float(i, "vehY", Float:vInfo[playerid][i][vehY]);
            cache_get_value_name_float(i, "vehZ", Float:vInfo[playerid][i][vehZ]);
            cache_get_value_name_float(i, "vehA", Float:vInfo[playerid][i][vehA]);

            cache_get_value_name_int(i, "veh_model", vInfo[playerid][i][vehModel]);
            cache_get_value_name_int(i, "veh_id", vInfo[playerid][i][vehSessionID]);

            cache_get_value_name_bool(i, "is_destroyed", vInfo[playerid][i][is_destroyed]);
            cache_get_value_name_bool(i, "is_spawned", vInfo[playerid][i][vehStatus]);

            if(!vInfo[playerid][i][vehStatus]) status = "{"COLOR_ORANGES"}despawned";

            // vInfo[playerid][i][vehModel]
            strcat(info, sprintf("{"COLOR_WHITES"}%s\t-\t%s\n", getVehicleName(vInfo[playerid][i][vehModel]), status), sizeof info);
        }
    }

    ShowPlayerDialog(playerid, Dialog[Dialog_vehicle][DIALOG_LIST_VEH], DIALOG_STYLE_TABLIST_HEADERS, "My Vehicle", info, "Detail", "Close");
    return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
    switch(dialogid){
        case DIALOG_LIST_VEH: {
            if(!response) return 0;
            new detail_info[255];
            strcat(detail_info, sprintf("{"COLOR_WHITES"}Plate [{"COLOR_YELLOWS"}%s]\n", vInfo[playerid][listitem][vehPlate]), sizeof detail_info);
            strcat(detail_info, sprintf("{"COLOR_WHITES"}VID [{"COLOR_YELLOWS"}%i]\n", vInfo[playerid][listitem][vehSessionID]), sizeof detail_info);

            ShowPlayerDialog(playerid, Dialog[Dialog_vehicle][DIALOG_DETAIL_VEHICLE], DIALOG_STYLE_INPUT, sprintf("Detail %s", inputtext), detail_info, "Show", "Close");
        }

        case DIALOG_DETAIL_VEHICLE: {
            if(!response) return 0;

        }
    }

    return 1;
}