// generated by "sampctl package init"
//Jangan pernah mengubah struktur yang sudah disusun !!

#include <a_samp>
#include <core>
#include <float>
#include <a_mysql>
#include <zcmd>
#include <strlib>
#include <sscanf2>
#include <streamer>
// #include <Dini>

#define YSI_YES_HEAP_MALLOC
#include <YSI_Coding/y_hooks>
#include <YSI_Data/y_iterate>
#include <YSI_Storage/y_ini>


//Modules
#include "../config/const.pwn"
#include "../config/modules_includes.pwn"

main() 
{
	// write code here and run "sampctl build" to compile
	// then run "sampctl run" to run it
	CekConnection();
	LoadObject();
	if(fexist("userdata/Fani_Annur.ini")){
		printf("%s", "Ada");
	}
	print("test");
}

static stock CekConnection()
{
    new MySQLOpt: option_id = mysql_init_options();
    mysql_set_option(option_id, AUTO_RECONNECT, true);
    g_SQL = mysql_connect(MYSQL_HOST, MYSQL_USER, MYSQL_PASS, MYSQL_DB, option_id);
    if(g_SQL == MYSQL_INVALID_HANDLE || mysql_errno(g_SQL) != 0){
        printf("[MySQL] Failed to connect");
        SendRconCommand("exit");
        return 0;
    }

    printf("[MySQL] Connection succesfully");
    return 1;
}

public OnGameModeInit()
{
	
	// return 1;
}

public OnPlayerConnect(playerid)
{
	//login
	Cek_akun(playerid);
	
	return 1;
}	

public OnPlayerDisconnect(playerid, reason)
{
	//Save player data
	SavePlayerData(playerid);
	
	//Message to all
	static message[255];
	format(message, sizeof message, "%s Terputus dari server, %s", pInfo[playerid][player_name], reason);
	SendClientMessageToAll(COLOR_RED, message);
	return 1;
}

static stock SavePlayerData(playerid)
{
	//Save player data jika keadaan sudah login / sudah bermain
	if(pInfo[playerid][logged_in]){
		new query[255];
		GetPlayerPos(playerid, Float:pInfo[playerid][pos_x], Float:pInfo[playerid][pos_y], Float:pInfo[playerid][pos_z]);
		mysql_format(g_SQL, query, sizeof(query), "UPDATE `karakter` SET `pos_x`=%f, `pos_y`=%f, `pos_z`=%f, `skin`=%i WHERE `nama`='%e'", 
			pInfo[playerid][pos_x], 
			pInfo[playerid][pos_y], 
			pInfo[playerid][pos_z], 
			pInfo[playerid][player_skin], 
			pInfo[playerid][player_name]
		);
		mysql_tquery(g_SQL, query);
	}

	return 1;
}

stock GetName(playerid)
{
	static name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name, sizeof name);
	return name;
}

stock getVehicleName(modelid)
{
    new string[20];
    format(string, sizeof string, "%s", VehicleNames[modelid - 400]);
    return string;
}

stock get_user_path()
{
	static path[255];
	format(path, sizeof path, PATH_USER_FILE "%s.ini", "Fani_Annur");
	return path;
} 

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	switch(dialogid){
		case DIALOG_LOGIN: {
			if(!response) return Kick(playerid);

			new hash_password[65];
			SHA256_PassHash(inputtext, SALT, hash_password, sizeof(hash_password));
			if(strcmp(hash_password, pInfo[playerid][player_password]) != 0){
				progressLogin[player_id]++;
				if(progressLogin[player_id] > 3){
					Kick(player_id);
				}else{
					SendClientMessage(playerid, COLOR_WHITE, "password salah");
					ShowPlayerDialog(
						playerid,
						DIALOG_LOGIN, 
						DIALOG_STYLE_PASSWORD, 
						"Login Page", 
						sprintf("{FFFFFF}Akun Server = {2EDD00} %s \n{FFFFFF}Nama = {2EDD00} %s\nMasukkan password anda", pInfo[player_id][ucp_name], pInfo[player_id][player_name]), 
						"Login", 
						"Quit"
					);
				}
			
			}else{
				new queryy[255];
				mysql_format(g_SQL, queryy, sizeof queryy, "SELECT * FROM `view_login_in_game` WHERE nama='%e'", pInfo[playerid][player_name]);
				mysql_tquery(g_SQL, queryy, "AssignPlayerdata", "i", playerid);
				pInfo[playerid][logged_in] = true;
				KillTimer(pInfo[playerid][timer_id]);
			}
		}

		case DIALOG_REGISTER: {
			if(!response) return Kick(playerid);
			if(strlen(inputtext) < 8 || strlen(inputtext) > 24){
				// SendClientMessage(playerid, COLOR_NORMAL_PLAYER, "Panjang password harus lebih dari 8 dan kurang dari 24 karakter");
				ShowPlayerDialog(playerid,DIALOG_REGISTER, DIALOG_STYLE_PASSWORD, "Login Page", sprintf("{FFFFFF}Akun Server = {2EDD00} %s \n {FFFFFF}Nama = {2EDD00} %s\n Panjang password harus lebih dari 8 dan kurang dari 24 karakter", pInfo[player_id][ucp_name], pInfo[player_id][player_name]), "Login", "Quit");
				return 0;
			}else{
				SHA256_PassHash(inputtext, pInfo[playerid][player_name], pInfo[playerid][player_password], 65);
				new query[255];
				mysql_format(g_SQL, query, sizeof(query), "UPDATE `karakter` SET `password` = '%e' WHERE nama = '%e'", pInfo[playerid][player_password], pInfo[playerid][player_name]);
				mysql_tquery(g_SQL, query);

				SendClientMessage(playerid, COLOR_WHITE, "Berhasil mengatur password, jangan sampai lupa!");
				SetSpawnInfo(playerid, 0, 1, 1955.33, 1343.12, 15.36, 269.15, 0, 0, 0, 0, 0, 0);
				SpawnPlayer(playerid);
			}
		}
	}

	return 1;
}